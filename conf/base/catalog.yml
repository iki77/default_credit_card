# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataSet
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataSet
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataSet
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different DataSet implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html

clients:
  type: pandas.ExcelDataSet
  filepath: data/01_raw/default of credit card clients.xls
  layer: raw
  load_args:
    header: 1
    index_col: 0
    dtype:
      {
        "default payment next month": "bool",
        "SEX": "category",
        "EDUCATION": "category",
        "MARRIAGE": "category",
      }

preprocessed_clients:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/preprocessed_clients.parquet
  layer: intermediate

normalized_clients:
  type: pandas.ParquetDataSet
  filepath: data/03_primary/normalized_clients.parquet
  layer: primary

profiles:
  type: pandas.ParquetDataSet
  filepath: data/03_primary/profiles.parquet
  layer: primary

labels:
  type: pandas.CSVDataSet
  filepath: data/03_primary/labels.csv
  layer: primary
  load_args:
    dtype: { "ID": "object", "DEFAULT_PAY": float }

labels_train:
  type: pandas.CSVDataSet
  filepath: data/04_features/labels_train.csv
  layer: features
  load_args:
    dtype: { "ID": "object", "DEFAULT_PAY": float }

labels_test:
  type: pandas.CSVDataSet
  filepath: data/04_features/labels_test.csv
  layer: features
  load_args:
    dtype: { "ID": "object", "DEFAULT_PAY": float }

feature_defs:
  type: default_credit_card.extras.datasets.features_serializer.FeaturesSerializer
  filepath: data/04_features/feature_definitions.json
  layer: features

features_train:
  type: pandas.ParquetDataSet
  filepath: data/04_features/features_train.parquet
  layer: features

features_test:
  type: pandas.ParquetDataSet
  filepath: data/04_features/features_test.parquet
  layer: features

imputer:
  type: pickle.PickleDataSet
  filepath: data/06_models/imputer.pickle
  versioned: true
  layer: models

outlier_detector:
  type: pickle.PickleDataSet
  filepath: data/06_models/outlier_detector.pickle
  versioned: true
  layer: models

feature_selector:
  type: pickle.PickleDataSet
  filepath: data/06_models/feature_selector.pickle
  versioned: true
  layer: models

resampler:
  type: pickle.PickleDataSet
  filepath: data/06_models/resampler.pickle
  versioned: true
  layer: models

resampler_search_results:
  type: pandas.ExcelDataSet
  filepath: data/08_reporting/resampler_search_results.xlsx
  layer: reporting

classifier:
  type: pickle.PickleDataSet
  filepath: data/06_models/classifier.pickle
  versioned: true
  layer: models

classifier_search_results:
  type: pandas.ExcelDataSet
  filepath: data/08_reporting/classifier_search_results.xlsx
  layer: reporting
# companies:
#   type: pandas.CSVDataSet
#   filepath: data/01_raw/companies.csv
#   # more about layers in the Data Engineering Convention:
#   # https://kedro.readthedocs.io/en/stable/03_tutorial/06_visualise_pipeline.html#interact-with-data-engineering-convention
#   layer: raw

# reviews:
#   type: pandas.CSVDataSet
#   filepath: data/01_raw/reviews.csv
#   layer: raw

# shuttles:
#   type: pandas.ExcelDataSet
#   filepath: data/01_raw/shuttles.xlsx
#   layer: raw

# preprocessed_companies:
#   type: pandas.CSVDataSet
#   filepath: data/02_intermediate/preprocessed_companies.csv
#   layer: intermediate

# preprocessed_shuttles:
#   type: pandas.CSVDataSet
#   filepath: data/02_intermediate/preprocessed_shuttles.csv
#   layer: intermediate

# master_table:
#   type: pandas.CSVDataSet
#   filepath: data/03_primary/master_table.csv
#   layer: primary

# regressor:
#   type: pickle.PickleDataSet
#   filepath: data/06_models/regressor.pickle
#   versioned: true
#   layer: models
